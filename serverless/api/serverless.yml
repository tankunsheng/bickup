# https://www.serverless.com/blog/node-rest-api-with-serverless-lambda-and-dynamodb

service: bickup-apis

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${env:ENVIRONMENT} # takes in an environment variable named 'ENVIRONMENT'
  region: ap-southeast-1
  environment:
    TableName: ${env:ENVIRONMENT}-jobsTable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"
      # to do the resource limited to dynamodb table - "${self:provider.environment.TableName}"
      # Resource:
      # - { "Fn::GetAtt": ["${self:provider.environment.TableName}", "Arn" ] }

functions:
  jobSubmission:
    handler: job.submit
    memorySize: 128
    description: Submit job information
    events:
      - http: 
          cors: true
          path: job
          method: post

# https://www.serverless.com/framework/docs/providers/aws/guide/resources/
resources:
  Resources:
    jobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TableName}
        AttributeDefinitions:
          - AttributeName: "clientNumber"
            AttributeType: "S"
          # - AttributeName: "timestamp" # timestamp of job submission
          #   AttributeType: "S"
        KeySchema:
          - AttributeName: "clientNumber" # client hp number
            KeyType: "HASH"     
          # - AttributeName: "timestamp" # timestamp of job submission
          #   KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        